const OptionCreditCard = "creditCard", OptionPSE = "pse", OptionCVU = "cvu", OptionAgencyVirtualCards = "agencyVirtualCards", OptionMultipagos = "multipagos", OptionRedirectOption = "redirectionOption", OptionEfecty = "efecty", OptionBankDeposit = "bankDeposit", OptionWallet = "wallet", OptionBancolombia = "bancolombia", OptionRedemptionPointsCreditCard = "redemptionPointsCreditCard", OptionNequi = "nequi", OptionDaviplata = "daviplata", OptionCreditCardTds = "CreditCardTds"; function getNameMonth(e) { var t = ""; const a = { culturees: { 0: "enero", 1: "febrero", 2: "marzo", 3: "abril", 4: "mayo", 5: "junio", 6: "julio", 7: "agosto", 8: "septiembre", 9: "octubre", 10: "noviembre", 11: "diciembre" }, cultureen: { 0: "january", 1: "february", 2: "march", 3: "april", 4: "may", 5: "june", 6: "july", 7: "august", 8: "september", 9: "october", 10: "november", 11: "december" } }; if ("en-us" === (document.getElementById("culture-code").value || "").toLowerCase()) t = a.cultureen[e]; else t = a.culturees[e]; return t } function getNameDay(e) { var t = ""; const a = { culturees: { 0: "domingo", 1: "lunes", 2: "martes", 3: "miércoles", 4: "jueves", 5: "viernes", 6: "sábado" }, cultureen: { 0: "sunday", 1: "monday", 2: "tuesday", 3: "wednesday", 4: "thursday", 5: "friday", 6: "saturday" } }; if ("en-us" === (document.getElementById("culture-code").value || "").toLowerCase()) t = a.cultureen[e]; else t = a.culturees[e]; return t } function getDateTimeWithFormat(e) { var t = ""; if ("en-us" === (document.getElementById("culture-code").value || "").toLowerCase()) t = getNameDay(e.getDay()) + " " + getNameMonth(e.getMonth()) + " " + e.getDate() + ", " + e.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }); else t = getNameDay(e.getDay()) + " " + e.getDate() + " de " + getNameMonth(e.getMonth()) + ", " + e.toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }); return t } function loader(e) { $(".loader__content")[0].innerHTML = $("#splash_text").val(), e ? $(".loader__fullpage").addClass("loader__active") : $(".loader__fullpage").removeClass("loader__active") } function payLoader(e) { $(".loader__content")[0].innerHTML = $("#splash_text_pay").val(), e ? $(".loader__fullpage").addClass("loader__active") : $(".loader__fullpage").removeClass("loader__active") } function hideAlert() { $("#ValidationAlert").hide(), $("#AnnouncementAlert").hide(), $("#MessageAlert").text(""), "multipagos" === activePayMethod && hideAlertSecureLink() } function showValidationAlert() { $("#ValidationAlert").show(), "" == $("#MessageAlert").html() && $("#AnnouncementAlert").hide() } function showMessageAlert(e) { null != e && "" != e && ($("#ValidationAlert").hide(), $("#AnnouncementAlert").show(), $("#MessageAlert").html(e)) } var activePayMethod = ""; function showPayMethod(e, t = "") { switch (e) { case OptionEfecty: CreateEfectyTransaction(t); break; case OptionMultipagos: ActivateFirstTimeSecureLink(); break; case OptionBancolombia: GetAcceptanceToken("ThirdPartyCheckoutTransactions"); break; case OptionNequi: GetNequiAcceptanceToken("ThirdPartyCheckoutTransactions"); break; case OptionDaviplata: ShowPayMethodDaviplata(); break; case "CreditCardTds": CreateLink3ds() }$("#pay-method-list").hide(), $("#pay-method-details").show(), activePayMethod = e, setPayMethodHiddenFields(), logInteractionEventLog(), $("#" + activePayMethod).show(), isCouponActive && showDiscountCoupon() } function logInteractionEventLog() { switch (activePayMethod) { case OptionCreditCard: creditCardSelectIEventLog(); break; case OptionAgencyVirtualCards: break; case OptionMultipagos: multipagosSelectIEventLog(); break; case OptionRedirectOption: redirectOptionSelectIEventLog(); break; case OptionPSE: pseSelectIEventLog(); break; case OptionRedemptionPointsCreditCard: break; case OptionWallet: walletSelectIEventLog(); break; case OptionBancolombia: bancolombiaSelectIEventLog(); break; case OptionEfecty: efectySelectIEventLog(); break; case OptionBankDeposit: bankDepositSelectIEventLog(); break; case OptionCVU: cvuSelectIEventLog(); break; case OptionNequi: nequiSelectIEventLog(); break; case OptionDaviplata: daviplataSelectIEventLog() } } function setPayMethodHiddenFields() { switch (activePayMethod) { case OptionCreditCard: $("#payMethod").val(1), $("#payProcessOptionType").val(1), $("#paymentGatewayPayType").val(1); break; case OptionAgencyVirtualCards: $("#payMethod").val(1), $("#payProcessOptionType").val(1), $("#paymentGatewayPayType").val(2); break; case OptionMultipagos: $("#payMethod").val(2), $("#payProcessOptionType").val(1), $("#paymentGatewayPayType").val(3); break; case OptionRedirectOption: $("#payMethod").val(1), $("#payProcessOptionType").val(1), $("#paymentGatewayPayType").val(4); break; case OptionPSE: $("#payMethod").val(2), $("#payProcessOptionType").val(4), $("#paymentGatewayPayType").val(5); break; case OptionRedemptionPointsCreditCard: $("#payMethod").val(1), $("#payProcessOptionType").val(8), $("#paymentGatewayPayType").val(1), activePayMethod = OptionCreditCard; break; case OptionWallet: $("#payMethod").val(20), $("#payProcessOptionType").val(0), $("#paymentGatewayPayType").val(1); break; case OptionEfecty: $("#payMethod").val(2), $("#payProcessOptionType").val(19), $("#paymentGatewayPayType").val(6); break; case OptionBancolombia: $("#payMethod").val(22), $("#payProcessOptionType").val(0), $("#paymentGatewayPayType").val(1); break; case OptionNequi: $("#payMethod").val(23); break; case OptionBankDeposit: $("#payMethod").val(3), activePayMethod = OptionBankDeposit; break; case OptionDaviplata: $(".page-error").hide(), $("#payMethod").val(2) } } function showMethodList() { isCouponActive && hideFullDiscountCoupon(), hideAlert(), $("#" + activePayMethod).hide(), $("#pay-method-details").hide(), $("#pay-method-list").show() } function getCheckedValue(e, t) { for (var a = document.getElementsByName(e), n = 0; n < a.length; n++)if (a[n].checked) return a[n].value; return t || "" } function getValueOrDefault(e, t) { var a = document.getElementsByName(e); return 0 == a.length ? t || "" : a[0].value } $(document).ready((function () { $(".summary .summary__collapsed .summary-heading .expand").on("click", (function (e) { e.preventDefault(), $(this).parent().parent().parent().parent().find(".summary__expanded").addClass("is--show"), $(this).parent().parent().parent().parent().find(".summary__collapsed").addClass("is--hidden") })), $(".summary .summary__expanded .summary-heading .expand").on("click", (function (e) { e.preventDefault(), $(this).parent().parent().parent().removeClass("is--show"), $(this).parent().parent().parent().parent().find(".summary__collapsed").removeClass("is--hidden") })), $(".form-check-dropdown .form-check__input").change((function () { $(this).is(":checked") ? $(".form-textfield-reason").removeClass("is--hidden") : $(".form-textfield-reason").addClass("is--hidden") })), $("#tc-number-div input").payment("formatCardNumber", { callback: function (e) { null == e ? ($("#tc-number-div input").removeClass("error"), $("#tc-number-div .icon-bank").removeClass().addClass("icon-bank ")) : "unknown" == e.class ? ($("#tc-number-div .icon-bank").removeClass().addClass("icon-bank "), $("#tc-number-div input").addClass("error")) : ($("#tc-number-div input").removeClass("error"), $("#tc-number-div .icon-bank").removeClass().addClass("icon-bank icon-bank-" + e.class)) } }), $("#cardExpired").on("keyup", expiryDay), $("#cardExpired").change(setExpiration), $(window).width() < 576 ? ($(".modal-mobile-header button").on("click", (function () { $(this).parent().parent().removeClass("modal-mobile-show") })), $("div[class^='booker-section-'] > .form-group").on("click", (function (e) { $(this).parent().find(".modal-mobile").addClass("modal-mobile-show"), $(this).find(".form-text-field input[type=text]").attr("readonly", !0), $(this).find(".form-text-field input[type=text]").blur(), $(this).parent().find(".modal-mobile .modal-mobile-content .form-group .form-text-field input[type=text]").focus() }))) : ($(".booker-section-item .form-group").on("click", (function (e) { $(this).find(".form-text-field input[type=text]").atrr("readonly", !1), $(this).find(".form-text-field input[type=text]").focus() })), $(".booker-section-item .form-group .form-text-field input[type=text]").focusin((function () { $(this).parent().parent().parent().find(".modal-mobile").addClass("modal-mobile-show") })).focusout((function () { $(this).parent().parent().parent().find(".modal-mobile").removeClass("modal-mobile-show") }))) })); var expiryDay = function () { var e = event.keyCode; -1 === [8].indexOf(e) && (event.target.value = event.target.value.replace(/^([1-9]\/|[2-9])$/g, "0$1/").replace(/^(0[1-9]|1[0-2])$/g, "$1/").replace(/^([0-1])([3-9])$/g, "0$1/$2").replace(/^(0?[1-9]|1[0-2])([0-9]{2})$/g, "$1/$2").replace(/^([0]+)\/|[0]+$/g, "0").replace(/[^\d\/]|^[\/]*$/g, "").replace(/\/\//g, "/")) }; function setExpiration() { var e = $("#cardExpired").val().split("/"); $("#cardMonthExpired").val(e[0]), $("#cardYearExpired").val("20" + e[1]) } var handleSuccessValid = function (e, t = "") { var a = !0, n = xmlToString(e.documentElement.childNodes), o = $.parseJSON(n).brokenRules; if ($(".has-danger").removeClass(" has-danger"), $(".form-text").hide(), showMessageAlert(""), hideAlert(), 0 != o.length) for (var r = 0; r < o.length; r++)try { o[r].isValid ? ($("#" + o[r].name).parent().parent().removeClass(" has-danger"), $("#" + o[r].name).parent().parent().find(".form-text").hide(), $("#" + o[r].name).parent().parent().find(".form-text")[0].innerHTML = "") : ("paymentOptionsError" == o[r].name ? showMessageAlert(o[r].explainMessage) : ($("#" + o[r].name).parent().parent().addClass(" has-danger"), $("#" + o[r].name).parent().parent().find(".form-text").show(), $($("#" + o[r].name).parent().parent().find(".form-text")[0]).is("small") ? $("#" + o[r].name).parent().parent().find(".form-text")[0].innerText = o[r].message.replace("<li>", "").replace("</li>", "") : $("#" + o[r].name).parent().parent().find(".form-text")[0].innerHTML = o[r].message.replace("<li>", "").replace("</li>", ""), showValidationAlert()), a = !1) } catch { } var i = parseFloatWithCulture($("#partialAmount").val()); a ? ($("#partialAmount").val(i), hideAlert(), creditCardPayIEventLog(), $("#formProcessPayment").attr("action", "" != t ? t : "procesar-pago"), $("#formProcessPayment").submit()) : ($("#button-creditcard")[0].disabled = !1, jQuery("input[name*='validatePayForms']").each((function () { $(this).disabled = !1 })), payLoader(!1), document.body.scrollTop = 0, document.documentElement.scrollTop = 0) }, handleFailureValid = function (e) { $("#button-creditcard")[0].disabled = !1, jQuery("input[name*='validatePayForms']").each((function () { $(this).disabled = !1 })), showValidationAlert(), payLoader(!1), document.body.scrollTop = 0, document.documentElement.scrollTop = 0 }; function xmlToString(e) { for (var t = "", a = 0; a < e.length; a++)t += e[a].nodeValue; return t } function onPaymentPlanClick(e, t = 0) { $("#paymentPlan").val(e), paymentPlanMXNInputUpdate(e), paymentPlanTrackingIEventLog(e + "-" + t), $("#redemptionPointsBankId").val(-1e3), $(".ap_points").find(".form-text").hide(), $("#pointRedemption").val(!1) } function onPointsPaymentPlanClick(e) { var t = $(e).val(); $("#redemptionPointsBankId").val(t), $("#pointRedemption").val(!0), $("#paymentPlan").val(1), activePayMethod = "redemptionPointsCreditCard", setPayMethodHiddenFields(), $(e).parents(".ap_points").find(".form-text").show() } function isValidCVU(e = "", t = "") { var a = { Amount: parseFloat($("#amount").val()), PartialAmountValue: parseFloatWithCulture($("#partialAmountCVU").val()), Token: $("#token").val(), MasterLocatorId: document.getElementById("masterLocatorId").value, Currency: $("#currency").val(), IdentityDocumentType: $("#identityDocumentTypeCVU").val(), IdentityDocumentNumber: $("#identityDocumentNumberCVU").val(), DiscalimerAccepted: !!document.getElementById("cvuAgreement").checked }, n = "" != e ? e : "/ValidateCVU"; $.ajax({ type: "POST", url: n, data: JSON.stringify(a), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { handleSuccessPath(e) && ("" != t ? CreateCVUTransaction("redirecting", t) : CreateCVUTransaction("redirecting")) }, error: function (e) { return handleFailurePath(e), !1 } }) } function CreateCVUTransaction(e, t = "") { payLoader(!0); var a = $("#cvuButton"); a.prop("disabled", !0); var n = a.text(); a.text(e); var o = parseFloatWithCulture($("#partialAmountCVU").val()), r = JSON.parse(document.getElementById("thirdPartyCheckoutsInformation").value), i = document.getElementById("identityDocumentTypeCVU").value, d = document.getElementById("identityDocumentNumberCVU").value, c = { MasterLocatorId: document.getElementById("masterLocatorId").value, Amount: o, PaymentProcessOptionType: r.CVU.PaymentProcessOptionType, Provider: r.CVU.Provider, SiteReturnUrl: r.CVU.SiteReturn, SpecificProviderDetails: JSON.stringify({ IdentityDocumentType: i, IdentityDocumentNumber: d }) }, l = "" != t ? t : "/CreateThirdPartyCheckoutTransaction"; $.ajax({ type: "POST", url: l, data: JSON.stringify(c), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { 0 == e.ResponseCode ? (hideAlert(), null != e.ProviderUrl && "" != e.ProviderUrl ? (cvuPayIEventLog(), window.location.href = e.ProviderUrl) : (payLoader(!1), a.text(n), a.prop("disabled", !1), showMessageAlert(document.getElementById("thirdPartyCheckoutGenericErrorMessage").value))) : (payLoader(!1), a.text(n), a.prop("disabled", !1), showMessageAlert(e.ResponseMessage)) }, error: function (e) { payLoader(!1), a.text(n), a.prop("disabled", !1), showMessageAlert(document.getElementById("thirdPartyCheckoutGenericErrorMessage").value) } }) } function isValidWallet(e = "") { var t = { Amount: parseFloat($("#amount").val()), PartialAmountValue: parseFloatWithCulture($("#partialAmountWallet").val()), Token: $("#token").val(), MasterLocatorId: document.getElementById("masterLocatorId").value, Currency: $("#currency").val() }; $.ajax({ type: "POST", url: "/ValidateWallet", data: JSON.stringify(t), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { if (handleSuccessPath(e)) { var t = parseFloatWithCulture($("#partialAmount").val()); $("#partialAmount").val(t), walletPayIEventLog(), hideAlert(), $("#formProcessPayment").attr("action", "/procesar-pago"), $("#formProcessPayment").submit() } }, error: function (e) { return handleFailurePath(e), !1 } }) } var handleSuccessPath = function (e) { var t = !0, a = e.data.BrokenRules; if ($(".has-danger").removeClass(" has-danger"), $(".form-text").hide(), showMessageAlert(""), hideAlert(), 0 != a.length) for (var n = 0; n < a.length; n++)try { a[n].IsValid ? ($("#" + a[n].Name).parent().parent().removeClass(" has-danger"), $("#" + a[n].Name).parent().parent().find(".form-text").hide(), $("#" + a[n].Name).parent().parent().find(".form-text")[0].innerHTML = "") : ($("#" + a[n].Name).parent().parent().addClass(" has-danger"), $("#" + a[n].Name).parent().parent().find(".form-text").show(), $($("#" + a[n].Name).parent().parent().find(".form-text")[0]).is("small") ? $("#" + a[n].Name).parent().parent().find(".form-text")[0].innerText = a[n].Message.replace("<li>", "").replace("</li>", "") : $("#" + a[n].Name).parent().parent().find(".form-text")[0].innerHTML = a[n].Message.replace("<li>", "").replace("</li>", ""), showValidationAlert(), t = !1) } catch { } return t ? hideAlert() : (jQuery("input[name*='validatePayForms']").each((function () { $(this).disabled = !1 })), payLoader(!1), document.body.scrollTop = 0, document.documentElement.scrollTop = 0), t }, handleFailurePath = function (e) { jQuery("input[name*='validatePayForms']").each((function () { $(this).disabled = !1 })), showValidationAlert(), payLoader(!1), document.body.scrollTop = 0, document.documentElement.scrollTop = 0 }; function CreateEfectyTransaction(e = "") { payLoader(!0), $(".page-information-efecty, .page-error").hide(); var t = { masterLocatorId: $("#masterLocatorId").val(), type: "efecty", amount: $("#pendingToPay").val() }, a = "" != e ? e : "/CreateCorrespondentPaymentsTransaction"; $.ajax({ type: "POST", url: a, data: JSON.stringify(t), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { if (hideAlert(), 0 == e.ResponseCode) { var t = new RegExp("(-|[0-9])+").exec(e.ExpirationDate); if (e.AgreementNumber && e.ClientReference && t && t[0]) { var a = getDateTimeWithFormat(new Date(parseInt(t[0]))); $("#efecty-expiration").text(a), $("#efecty-agreement").text(e.AgreementNumber), $("#efecty-reference").text(e.ClientReference), $(".page-information-efecty").show(), $(".page-error").hide() } else $(".page-information-efecty").hide(), $(".page-error").show(); payLoader(!1) } else $(".page-information-efecty").hide(), $(".page-error").show(), payLoader(!1) }, error: function (e) { $(".page-information-efecty").hide(), $(".page-error").show(), payLoader(!1) } }) } function GetAcceptanceToken(e = "") { try { payLoader(!0); var t = JSON.parse(document.getElementById("thirdPartyCheckoutsInformation").value); $("#page-information-bancolombia").show(), $(".page-error").hide(); var a = { providerConfigId: t.Bancolombia.ThirdPartyProviderConfigId }; $.ajax({ type: "POST", url: "/ThirdPartyCheckoutTransactions/GetAcceptanceToken", data: JSON.stringify(a), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { hideAlert(), payLoader(!1); try { if (null != e.ProviderRequestInformation.acceptanceToken && "" != e.ProviderRequestInformation.acceptanceToken) document.getElementById("aTyC").href = e.ProviderRequestInformation.permalink, document.getElementById("AcceptanceToken").value = e.ProviderRequestInformation.acceptanceToken; else $("#page-information-bancolombia").hide(), $(".page-error").show() } catch (e) { $("#page-information-bancolombia").hide(), $(".page-error").show(), payLoader(!1) } }, error: function (e) { $("#page-information-bancolombia").hide(), $(".page-error").show(), payLoader(!1) } }) } catch (e) { $("#page-information-bancolombia").hide(), $(".page-error").show(), payLoader(!1) } } function CreateBancolombiaTransaction(e = "") { try { payLoader(!0); var t = JSON.parse(document.getElementById("thirdPartyCheckoutsInformation").value); $("#page-information-bancolombia").show(), $(".page-error").hide(); var a = { MasterLocatorId: document.getElementById("masterLocatorId").value, Amount: parseFloat($("#amount").val()), PaymentProcessOptionType: "Bancolombia", Provider: "Bancolombia", SiteReturnUrl: t.Bancolombia.SiteReturn, SpecificProviderDetails: "{'SandboxStatus':'APPROVED','LegalIdType':'CC','AcceptanceToken':'" + document.getElementById("AcceptanceToken").value + "', 'LegalId':''}" }; $.ajax({ type: "POST", url: "/ThirdPartyCheckoutTransactions/CreateThirdPartyCheckoutTransaction", data: JSON.stringify(a), dataType: "json", contentType: "application/json; charset=utf-8", success: function (e) { hideAlert(), payLoader(!1); try { null != e.ProviderRequestInformation.redirectUrl ? (bancolombiaPayIEventLog(), $("#page-information-bancolombia").show(), location.href = e.ProviderRequestInformation.redirectUrl) : ($("#page-information-bancolombia").hide(), $(".page-error").show()) } catch (e) { $("#page-information-bancolombia").hide(), $(".page-error").show(), payLoader(!1) } }, error: function (e) { $("#page-information-bancolombia").hide(), $(".page-error").show(), payLoader(!1) } }) } catch (e) { $("#page-information-bancolombia").hide(), $(".page-error").show(), payLoader(!1) } } function RedirectOptionRedirect(e = "") { redirectOptionRedirectIEventLog(), window.location.href = e } function CreateLink3ds() { var e = $("#token").val(); $.ajax({ type: "get", url: "/ProcessPaymentLinkSecureWp/" + e, success: function (e) { document.getElementById("thirdPartyCheckoutUrlWp").value = e.data }, statusCode: { 401: function (e) { }, 404: function (e) { }, 500: function (e) { } } }) } function copyLinkSecureTds() { var e = document.getElementById("thirdPartyCheckoutUrlWp"); e.select(), e.setSelectionRange(0, 99999), navigator.clipboard.writeText(e.value) } document.getElementById("chkConfirm") && document.getElementById("chkConfirm").addEventListener("change", (e => { e.currentTarget.checked ? (document.getElementById("btnCompletarReservacion").disabled = !1, document.getElementById("btnCompletarReservacion").classList.remove("button--disabled")) : (document.getElementById("btnCompletarReservacion").disabled = !0, document.getElementById("btnCompletarReservacion").classList.add("button--disabled")) }));